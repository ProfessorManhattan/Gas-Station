---
# Three hosts are defined but the quickstart script filters using an environment variable
# so only one host is provisioned at a time by quickstart.
all:
  vars:
    ansible_password: "{{ lookup('env', 'ANSIBLE_PASSWORD') }}"
    ansible_user: "{{ lookup('env', 'ANSIBLE_USER') }}"
    ansible_winrm_transport: credssp
    ansible_winrm_server_cert_validation: ignore
  children:
    desktop:
      children:
        nix:
          hosts:
            standard:
              ansible_connection: local
        qubes:
          vars:
            ansible_connection: qubes
            ansible_python_interpreter: /usr/bin/python3
            # Do not include dotfiles with sensitive information by default
            include_pii_dotfiles: false
            qubes:
              dom0_vm: dom0
          hosts:
            dom0:
            blank:
              qubes:
                vm_type: TemplateVM
          children:
            vms:
              vars:
                mem: 2048
                maxmem: 4096
                memory: 512
                vcpus: 2
              children:
                systemvms:
                templatevms:
                netvms:
                proxyvms:
                appvms:
                standalonevms:
        windows:
          hosts:
            standard:
              ansible_connection: winrm

appvms:
  vars:
    qubes:
      maxmem: 2048
      mem: 2048
      memory: 512
      vm_type: AppVM
  children:
    primarydvms:
      vars:
        qubes:
          label: green
          netvm: sys-firewall
          services:
            appmenus-dispvm: true
            vm-boot-protect: true
            vm-boot-protect-root: false
          template_for_dispvms: true
      hosts:
        debian-11-dvm:
          qubes:
            template: debian-11
            template_vm: debian-11
        debian-11-sys-net-dvm:
          qubes:
            template: debian-11
            template_vm: debian-11
        debian-11-minimal-dvm:
          qubes:
            template: debian-11-minimal
            template_vm: debian-11-minimal
        fedora-36-dvm:
          qubes:
            template: fedora-36
            template_vm: fedora-36
        fedora-36-minimal-dvm:
          qubes:
            template: fedora-36-minimal
            template_vm: fedora-36-minimal
    secondarydvms:
      vars:
        qubes:
          label: green
          netvm: sys-firewall
          services:
            appmenus-dispvm: true
            vm-boot-protect: true
            vm-boot-protect-root: false
          template_for_dipvms: true
        hosts:
          anonymous-dvm:
            qubes:
              template: anonymous-template
              template_vm: anonymous-template
          web-dvm:
            qubes:
              template: web-template
              template_vm: web-template
    uservms:
      hosts:
        crypto:
          qubes:
            netvm: vpn-proton
            netvm_vm: vpn-proton
            template: crypto-template
            template_vm: crypto-template
        development:
          qubes:
            maxmem: 8192
            netvm: vpn-proton
            netvm_vm: vpn-proton
            template: development-template
            template_vm: development-template
            vcpus: 4
          volume:
            private: 40g
            root: 40g
        gpg:
          qubes:
            label: green
            template: gpg-template
            template_vm: gpg-template
        kubernetes:
          qubes:
            autostart: true
            maxmem: 8192
            netvm: vpn-pritunl
            netvm_vm: vpn-pritunl
            template: kubernetes-template
            template_vm: kubernetes-template
            vcpus: 4
            vm_type: NetVM
          volume:
            root: 100g
        media:
          qubes:
            netvm: vpn-proton
            netvm_vm: vpn-proton
            template: media-template
            template_vm: media-template
          volume:
            private: 100g
            root: 10g
        personal:
          qubes:
            maxmem: 8192
            netvm: sys-firewall
            netvm_vm: vpn-proton
            template: personal-template
            template_vm: personal-template
            vcpus: 4
          volume:
            private: 20g
            root: 40g
        # pritunl-server:
        #   qubes:
        #     # netvm: opnsense
        #     # netvm_vm: opnsense
        #     netvm: sys-firewall
        #     netvm_vm: sys-firewall
        #     template: pritunl-server-template
        #     template_vm: pritunl-server-template
        # provision:
        #   qubes:
        #     netvm: vpn-pritunl
        #     netvm_vm: vpn-pritunl
        #     template: provision-template
        #     template_vm: provision-template
        remote:
          qubes:
            netvm: vpn-pritunl
            netvm_vm: vpn-pritunl
            template: remote-template
            template_vm: remote-template
        swarm:
          qubes:
            autostart: true
            maxmem: 8192
            netvm: vpn-pritunl
            netvm_vm: vpn-pritunl
            template: swarm-template
            template_vm: swarm-template
            vcpus: 4
        vault:
          qubes:
            label: green
            template: vault-template
            template_vm: vault-template
        work:
          qubes:
            maxmem: 8192
            netvm: vpn-pritunl
            netvm_vm: vpn-pritunl
            template: work-template
            template_vm: work-template
            vcpus: 4
          volume:
            private: 40g
            root: 40g
      vars:
        qubes:
          label: purple
          services:
            vm-boot-protect-root: true
          template: fedora-36
          template_vm: fedora-36

netvms:
  hosts:
    # opnsense:
    #   ansible_password: "{{ lookup('env', 'OPNSENSE_PASSWORD') }}"
    #   ansible_user: "{{ lookup('env', 'OPNSENSE_USER') }}"
    #   qubes:
    #     netvm_vm: none
    #     pcidevs: '{{ sys_net_pcidevs | default([]) }}'
    #     provides-network: true
    #     template: opnsense-template
    #     template_vm: opnsense-template
    #   volume:
    #     root: 40g
    # TODO - Add Security Onion to stack.
    # Note - Ideally it should be run on another offline computer passively tapped into the Ethernet but in the spirit of mashing everything into one computer.. leaving this as a note for now -- PRs weldome
    # seconion:
    #   ansible_password: "{{ lookup('env', 'SECONION_PASSWORD') }}"
    #   ansible_user: "{{ lookup('env', 'SECONION_USER') }}"
    #   qubes:
    #     template: seconion-template
    #     template_vm: seconion-template
    #   volume:
    #     root: 400g
  vars:
    ansible_connection: ssh
    qubes:
      autostart: true
      label: orange
      mem: 4096
      memory: 8192
      maxmem: 8192
      virt_mode: hvm
      vm_type: NetVM

proxyvms:
  hosts:
    vpn-mullvad:
    vpn-pritunl:
      # qubes:
        # netvm: opnsense
        # netvm_vm: opnsense
    vpn-proton:
  vars:
    qubes:
      autostart: true
      services:
        network-manager: true
        vm-boot-protect: true
      label: orange
      mem: 512
      memory: 256
      maxmem: 1024
      netvm: sys-firewall
      netvm_vm: sys-firewall
      provides-network: true
      template: vpn-template
      template_vm: vpn-template
      vcpus: 1
      vm_type: ProxyVM
    volume:
      private: 2g
      root: 5g

templatevms:
  vars:
    qubes:
      label: black
      netvm: sys-firewall
      netvm_vm: sys-firewall
      vm_type: TemplateVM
  children:
    primarytemplates:
      hosts:
        debian-11:
        debian-11-minimal:
        fedora-36:
        fedora-36-minimal:
        fedora-36-xfce:
        whonix-gw-16:
        whonix-ws-16:
    secondarytemplates:
      hosts:
        crypto-template:
        development-template:
          include_pii_dotfiles: true
        gpg-template:
          qubes:
            source: fedora-36-minimal
        kubernetes-template:
        media-template:
        personal-template:
          include_pii_dotfiles: true
        # pritunl-server-template:
        #   qubes:
        #     source: debian-10
        provision-template:
        remote-template:
        swarm-template:
        vpn-template:
          qubes:
            source: fedora-36-minimal
        vault-template:
          qubes:
            source: fedora-36-minimal
        work-template:
          include_pii_dotfiles: true
      vars:
        qubes:
          source: fedora-36
    desktoptemplates:
      hosts:
        # TODO Add version numbers in these template names
        archlinux-desktop-template:
        archlinux-desktop-base-template:
        centos-desktop-template:
        centos-desktop-base-template:
        centos-server-template:
        debian-desktop-template:
        debian-desktop-base-template:
        debian-server-template:
        fedora-desktop-template:
        fedora-desktop-base-template:
        fedora-server-template:
        macos-desktop-template:
        macos-desktop-base-template:
        ubuntu-desktop-template:
        ubuntu-desktop-base-template:
        ubuntu-server-template:
        windows-desktop-template:
          # ansible_connection: winrm
        windows-desktop-base-template:
          # ansible_connection: winrm
        windows-server-template:
          # ansible_connection: winrm
      vars:
        # SSH connection is unnecessary since templates are loaded from vagrantup.com or via the qubes-packer.yml playbook
        # ansible_connection: ssh
        # ansible_password: "{{ lookup('env', 'VAGRANT_PASSWORD') }}"
        # ansible_user: "{{ lookup('env', 'VAGRANT_USER') }}"
        qubes:
          kernel: ''
          netvm: sys-net
          netvm_vm: sys-net
          source: blank
          virt_mode: hvm
        volume:
          root: 40g
    hvmtemplates:
      hosts:
        # opnsense-template:
        #   ansible_password: "{{ lookup('env', 'OPNSENSE_PASSWORD') }}"
        #   ansible_user: "{{ lookup('env', 'OPNSENSE_USER') }}"
        #   qubes:
        #     netvm_vm: None
        #     provides-network: true
        #     pcidevs: '{{ sys_net_pcidevs | default([]) }}'
        #     source: opnsense-22.7
        #   volume:
        #     root: 40g
        # seconion-template:
        #   ansible_password: "{{ lookup('env', 'SECONION_PASSWORD') }}"
        #   ansible_user: "{{ lookup('env', 'SECONION_USER') }}"
        #   volume:
        #     root: 10g
      vars:
        ansible_connection: ssh
        qubes:
          kernel: ''
          virt_mode: hvm
    dispvmtemplates:
      hosts:
        anonymous-template:
          qubes:
            services:
              appmenus-dispvm: true
            source: whonix-ws-16
        web-template:
          qubes:
            services:
              appmenus-dispvm: true
      vars:
        qubes:
          services:
            vm-boot-protect: true
          source: fedora-36

standalonevms:
  vars:
    qubes:
      label: blue
      mem: 4096
      memory: 4096
      maxmem: 8192
      kernel: ''
      vcpus: 4
      virt_mode: hvm
      vm_type: StandaloneVM
  children:
    desktopstandalones:
      hosts:
        # By default, only initialize standalones for the fully loaded environments
        # If you just want a default ubuntu HVM, for instance, then qvm-clone from the
        # `ubuntu-desktop-base-template` TemplateVM
        archlinux-desktop:
          qubes:
            template: archlinux-desktop-template
            template_vm: archlinux-desktop-template
        centos-desktop:
          qubes:
            template: centos-desktop-template
            template_vm: centos-desktop-template
        debian-desktop:
          qubes:
            template: debian-desktop-template
            template_vm: debian-desktop-template
        debian-server:
          qubes:
            template: debian-server-template
            template_vm: debian-server-template
        fedora-desktop:
          qubes:
            template: fedora-desktop-template
            template_vm: fedora-desktop-template
        macos-desktop:
          qubes:
            template: macos-desktop-template
            template_vm: macos-desktop-template
        ubuntu-desktop:
          qubes:
            template: ubuntu-desktop-template
            template_vm: ubuntu-desktop-template
        windows-desktop:
          ansible_connection: winrm
          qubes:
            template: windows-desktop-template
            template_vm: windows-desktop-template
      vars:
        ansible_connection: ssh
        ansible_password: "{{ lookup('env', 'VAGRANT_PASSWORD') }}"
        ansible_user: "{{ lookup('env', 'VAGRANT_USER') }}"
        qubes:
          netvm: vpn-proton
          netvm_vm: vpn-proton
        volume:
          root: 50g

systemvms:
  hosts:
    anon-whonix:
      qubes:
        netvm: sys-whonix
        netvm_vm: sys-whonix
        services:
          vm-boot-protect: true
          vm-boot-protect-root: false
        template: whonix-ws-16
        template_vm: whonix-ws-16
    sys-firewall:
      qubes:
        netvm: sys-net
        netvm_vm: sys-net
        vm_type: ProxyVM
    sys-net:
    sys-usb:
    sys-whonix:
      qubes:
        netvm: sys-firewall
        netvm_vm: sys-firewall
        services:
          vm-boot-protect: true
          vm-boot-protect-root: false
        template: whonix-gw-16
        template_vm: whonix-gw-16
    whonix-ws-16-dvm:
      qubes:
        netvm: sys-firewall
        netvm_vm: sys-firewall
        services:
          vm-boot-protect: true
          vm-boot-protect-root: false
        template: whonix-ws-16
        template_vm: whonix-ws-16
  vars:
    qubes:
      label: red
      services:
        vm-boot-protect-root: true
      vm_type: AppVM
