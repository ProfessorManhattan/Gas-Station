---
# Three hosts are defined but the quickstart script filters using an environment variable
# so only one host is provisioned at a time by quickstart.
all:
  vars:
    ansible_password: "{{ lookup('env', 'ANSIBLE_PASSWORD') }}"
    ansible_user: "{{ lookup('env', 'ANSIBLE_USER') }}"
    ansible_winrm_transport: credssp
    ansible_winrm_server_cert_validation: ignore
  children:
    desktop:
      children:
        nix:
          hosts:
            standard:
              ansible_connection: local
        qubes:
          vars:
            ansible_connection: qubes
            ansible_python_interpreter: /usr/bin/python3
            # Do not include dotfiles with sensitive information by default
            include_pii_dotfiles: false
            qubes:
              dom0_vm: dom0
          hosts:
            dom0:
            blank:
              qubes:
                vm_type: TemplateVM
          children:
            vms:
              vars:
                mem: 2048
                maxmem: 4096
                memory: 512
                vcpus: 2
              children:
                system-vms:
                template-vms:
                app-dvm-templates:
                net-vms:
                proxy-vms:
                app-dvms:
                app-vms:
                standalone-vms:
        windows:
          hosts:
            standard:
              ansible_connection: winrm

app-vms:
  vars:
    qubes:
      maxmem: 2048
      mem: 2048
      memory: 512
      netvm_vm: sys-firewall
      vm_type: AppVM
  children:
    app-dvms:
      vars:
        label: yellow
        services:
          appmenus-dispvm: true
      hosts:
        anon:
          qubes:
            template: anon-dvm
            template_vm: anon-dvm
        dev-temp:
          qubes:
            template: dev-dvm
            template_vm: dev-dvm
        media:
          qubes:
            template: media-dvm
            template_vm: media-dvm
        office:
          qubes:
            template: office-dvm
            template_vm: office-dvm
        util:
          qubes:
            template: util-dvm
            template_vm: util-dvm
        web:
          qubes:
            template: web-dvm
            template_vm: web-dvm
    app-dvm-templates:
      vars:
        qubes:
          label: gray
          services:
            appmenus-dispvm: true
          template_for_dipvms: true
      hosts:
        anon-dvm:
          qubes:
            template: anon-tmpl
            template_vm: anon-tmpl
        dev-dvm:
          qubes:
            template: dev-tmpl
            template_vm: dev-tmpl
        media-dvm:
          qubes:
            template: media-tmpl
            template_vm: media-tmpl
        office-dvm:
          qubes:
            template: office-tmpl
            template_vm: office-tmpl
        util-dvm:
          qubes:
            template: util-tmpl
            template_vm: util-tmpl
        web-dvm:
          qubes:
            template: web-tmpl
            template_vm: web-tmpl
    primary-dvm-templates:
      vars:
        qubes:
          label: gray
          services:
            appmenus-dispvm: true
          template_for_dispvms: true
      hosts:
        debian-11-dvm:
          qubes:
            template_vm: debian-11
        fedora-36-dvm:
          qubes:
            template: fedora-36
            template_vm: fedora-36
        sys-net-dvm:
          qubes:
            template: debian-11
            template_vm: debian-11
    standard-vms:
      hosts:
        crypto:
          qubes:
            netvm_vm: vpn-proton
            template: crypto-tmpl
            template_vm: crypto-tmpl
        dev:
          qubes:
            maxmem: 8192
            netvm_vm: vpn-proton
            template: dev-tmpl
            template_vm: dev-tmpl
            vcpus: 4
          volume:
            private: 40g
            root: 40g
        gpg:
          qubes:
            label: green
            template: gpg-tmpl
            template_vm: gpg-tmpl
        kubernetes:
          qubes:
            autostart: true
            maxmem: 8192
            netvm_vm: vpn-pritunl
            template: kubernetes-tmpl
            template_vm: kubernetes-tmpl
            vcpus: 4
            vm_type: NetVM
          volume:
            root: 100g
        personal:
          qubes:
            maxmem: 8192
            netvm_vm: vpn-proton
            template: personal-tmpl
            template_vm: personal-tmpl
            vcpus: 4
          volume:
            private: 20g
            root: 40g
        # pritunl-server:
        #   qubes:
        #     # netvm_vm: opnsense
        #     netvm_vm: sys-firewall
        #     template_vm: pritunl-server-tmpl
        # provision:
        #   qubes:
        #     netvm_vm: vpn-pritunl
        #     template_vm: provision-tmpl
        remote:
          qubes:
            netvm_vm: vpn-pritunl
            template: remote-tmpl
            template_vm: remote-tmpl
        swarm:
          qubes:
            autostart: true
            maxmem: 8192
            netvm_vm: vpn-pritunl
            template: docker-tmpl
            template_vm: docker-tmpl
            vcpus: 4
        vault:
          qubes:
            label: green
            template: vault-tmpl
            template_vm: vault-tmpl
        work:
          qubes:
            maxmem: 8192
            netvm_vm: vpn-pritunl
            template: work-tmpl
            template_vm: work-tmpl
            vcpus: 4
          volume:
            private: 40g
            root: 40g
      vars:
        qubes:
          label: purple
          template_vm: fedora-36

specialty-vms:
  vars:
    qubes:
      vm_type: AppVM
  hosts:
    api:
      qubes:
        label: orange
        template: provision-tmpl
        template_vm: provision-tmpl
    maas:
      qubes:
        label: orange
        # netvm_vm: opnsense
        template: provision-tmpl
        template_vm: provision-tmpl
    mirror:
      qubes:
        label: orange
        template: docker-tmpl
        template_vm: docker-tmpl
    pritunl:

net-vms:
  hosts:
    # opnsense:
    #   ansible_password: "{{ lookup('env', 'OPNSENSE_PASSWORD') }}"
    #   ansible_user: "{{ lookup('env', 'OPNSENSE_USER') }}"
    #   qubes:
    #     netvm_vm: none
    #     pcidevs: '{{ sys_net_pcidevs | default([]) }}'
    #     provides-network: true
    #     template: opnsense-tmpl
    #     template_vm: opnsense-tmpl
    #   volume:
    #     root: 40g
    # TODO - Add Security Onion to stack.
    # Note - Ideally it should be run on another offline computer passively tapped into the Ethernet but in the spirit of mashing everything into one computer.. leaving this as a note for now -- PRs weldome
    # seconion:
    #   ansible_password: "{{ lookup('env', 'SECONION_PASSWORD') }}"
    #   ansible_user: "{{ lookup('env', 'SECONION_USER') }}"
    #   qubes:
    #     template: seconion-tmpl
    #     template_vm: seconion-tmpl
    #   volume:
    #     root: 400g
  vars:
    ansible_connection: ssh
    qubes:
      autostart: true
      label: orange
      mem: 4096
      maxmem: 8192
      virt_mode: hvm
      vm_type: NetVM

proxy-vms:
  hosts:
    vpn-mullvad:
    vpn-pritunl:
      # qubes:
        # netvm_vm: opnsense
    vpn-proton:
    vpn-tailscale:
    vpn-warp:
  vars:
    qubes:
      autostart: true
      services:
        network-manager: true
      label: orange
      mem: 512
      memory: 256
      maxmem: 1024
      netvm_vm: sys-firewall
      provides-network: true
      template: vpn-tmpl
      template_vm: vpn-tmpl
      vcpus: 1
      vm_type: ProxyVM
    volume:
      private: 2g
      root: 5g

template-vms:
  vars:
    qubes:
      label: black
      netvm_vm: sys-firewall
      vm_type: TemplateVM
  children:
    primary-templates:
      hosts:
        debian-11:
        debian-11-minimal:
        fedora-36:
        fedora-36-minimal:
        fedora-36-xfce:
        jammy:
        whonix-gw-16:
        whonix-ws-16:
      vars:
        qubes:
          label: red
    standard-templates:
      hosts:
        anon-tmpl:
        crypto-tmpl:
        dev-tmpl:
          include_pii_dotfiles: true
        docker-tmpl:
        gpg-tmpl:
        kubernetes-tmpl:
        media-tmpl:
        personal-tmpl:
          include_pii_dotfiles: true
        # pritunl-server-tmpl:
        #   qubes:
        #     source: debian-10
        office-tmpl:
        provision-tmpl:
          qubes:
            source: jammy
        remote-tmpl:
        util-tmpl:
        vpn-tmpl:
        vault-tmpl:
        web-tmpl:
        work-tmpl:
          include_pii_dotfiles: true
      vars:
        qubes:
          source: fedora-36
    desktop-hvm-templates:
      hosts:
        # TODO Add version numbers in these template names
        archlinux-desktop-tmpl:
        centos-desktop-tmpl:
        debian-desktop-tmpl:
        debian-server-tmpl:
        fedora-desktop-tmpl:
        macos-desktop-tmpl:
        ubuntu-desktop-tmpl:
        windows-desktop-tmpl:
          ansible_connection: winrm
      vars:
        # SSH connection is unnecessary since templates are loaded from vagrantup.com or via the qubes-packer.yml playbook
        # ansible_connection: ssh
        # ansible_password: "{{ lookup('env', 'VAGRANT_PASSWORD') }}"
        # ansible_user: "{{ lookup('env', 'VAGRANT_USER') }}"
        qubes:
          kernel: ''
          netvm_vm: sys-net
          source: blank
          virt_mode: hvm
        volume:
          root: 40g
    misc-hvm-templates:
      hosts:
        # opnsense-tmpl:
        #   ansible_password: "{{ lookup('env', 'OPNSENSE_PASSWORD') }}"
        #   ansible_user: "{{ lookup('env', 'OPNSENSE_USER') }}"
        #   qubes:
        #     netvm_vm: None
        #     provides-network: true
        #     pcidevs: '{{ sys_net_pcidevs | default([]) }}'
        #     source: opnsense-22.7
        #   volume:
        #     root: 40g
        # seconion-tmpl:
        #   ansible_password: "{{ lookup('env', 'SECONION_PASSWORD') }}"
        #   ansible_user: "{{ lookup('env', 'SECONION_USER') }}"
        #   volume:
        #     root: 10g
      vars:
        ansible_connection: ssh
        qubes:
          kernel: ''
          virt_mode: hvm

standalone-vms:
  vars:
    qubes:
      label: blue
      mem: 4096
      maxmem: 8192
      kernel: ''
      vcpus: 4
      virt_mode: hvm
      vm_type: StandaloneVM
  children:
    desktop-standalone-vms:
      hosts:
        # By default, only initialize standalones for the fully loaded environments
        # If you just want a default ubuntu HVM, for instance, then qvm-clone from the
        # `ubuntu-desktop-base-tmpl` TemplateVM
        archlinux-desktop:
          qubes:
            source: archlinux-desktop-tmpl
        centos-desktop:
          qubes:
            source: centos-desktop-tmpl
        debian-desktop:
          qubes:
            source: debian-desktop-tmpl
        debian-server:
          qubes:
            source: debian-server-tmpl
        fedora-desktop:
          qubes:
            source: fedora-desktop-tmpl
        macos-desktop:
          qubes:
            source: macos-desktop-tmpl
        ubuntu-desktop:
          qubes:
            source: ubuntu-desktop-tmpl
        windows-desktop:
          ansible_connection: winrm
          qubes:
            source: windows-desktop-tmpl
      vars:
        ansible_connection: ssh
        ansible_password: "{{ lookup('env', 'VAGRANT_PASSWORD') }}"
        ansible_user: "{{ lookup('env', 'VAGRANT_USER') }}"
        qubes:
          netvm_vm: vpn-proton
        volume:
          root: 50g

system-vms:
  hosts:
    anon-whonix:
      qubes:
        netvm_vm: sys-whonix
        template_vm: whonix-ws-16
    debian-11:
      qubes:
        vm_type: TemplateVM
    debian-11-dvm:
      qubes:
        netvm_vm: sys-firewall
    sys-firewall:
      qubes:
        netvm_vm: sys-net
        vm_type: ProxyVM
    sys-net:
    sys-usb:
    sys-whonix:
      qubes:
        netvm_vm: sys-firewall
        template_vm: whonix-gw-16
    whonix-ws-16-dvm:
      qubes:
        netvm_vm: sys-firewall
        template_vm: whonix-ws-16
  vars:
    qubes:
      label: red
      vm_type: AppVM
