---
# yamllint disable rule:max-lines
- name: Provision / initialize dom0
  hosts: dom0
  tasks:
    # Prepare dom0
    # NOTE: The Qubes dom0 provisioning has some "become" sourcery involved because the default
    # user is root instead of the dom0 user
    - name: Check if dom0 was provisioned
      stat:
        path: /tmp/.setup-dom0-partially-provisioned
      register: dom0_partially_provisioned
    - name: Update and configure dom0
      vars:
        dom0_features:
          - dotfiles
          - grub
          - mirage
          - new-menu
          # - opnsense
          - plymouth
          - policy
          - screenshot
          - split-gpg
          - sudo-prompt
          - sys-gui
          - sys-usb
          - theme
          - u2f
          - update
          - yubikey
      include_role:
        name: professormanhattan.qubes
      when: not dom0_partially_provisioned.stat.exists
    - name: Register "partially provisioned" indicator temporary file
      copy:
        content: |
          done
        dest: /tmp/.setup-dom0-partially-provisioned
      when: not dom0_partially_provisioned.stat.exists
    - name: Ensure primary-templates-stock TemplateVMs are configured to use sys-firewall as their NetVM
      vars:
        netvm: sys-firewall
      include_tasks: tasks/qubes/qvm-netvm.yml
      loop: "{{ groups['primary-templates-stock'] + groups['primary-templates-minimal'] }}"

- name: Ensure base templates are updated
  hosts: primary-templates-stock:primary-templates-minimal
  tasks:
    - name: Determine if RPM Fusion was already enabled
      become: true
      stat:
        path: /root/.setup-rpm-fusion-enabled
      register: template_rpm_fusion
      when: ansible_os_family == 'RedHat'
    - name: Ensure RPM Fusion package repositories are enabled on RedHat-flavored systems
      become: true
      shell:
        cmd: |
          dnf config-manager --set-enabled rpmfusion-free
          dnf config-manager --set-enabled rpmfusion-free-updates
          dnf config-manager --set-enabled rpmfusion-nonfree
          dnf config-manager --set-enabled rpmfusion-nonfree-updates
      when:
        - ansible_os_family == 'RedHat'
        - not template_rpm_fusion.stat.exists
    - name: Register RPM Fusion enabled indicator
      become: true
      copy:
        content: |
          done
        dest: /root/.setup-rpm-fusion-enabled
      when:
        - ansible_os_family == 'RedHat'
        - not template_rpm_fusion.stat.exists
    - name: Ensure Debian systems are updated
      become: true
      apt:
        cache_valid_time: 3600
        force_apt_get: true
        update_cache: true
        upgrade: dist
      when: ansible_os_family == 'Debian'
    - name: Ensure RedHat systems are updated
      become: true
      dnf:
        name: '*'
        state: latest
        update_cache: true
      when: ansible_os_family == 'RedHat'
    - name: Ensure Archlinux systems are updated
      become: true
      community.general.pacman:
        update_cache: true
        upgrade: true
      when: ansible_os_family == 'Archlinux'
    - name: Install common software packages
      become: true
      ansible.builtin.package:
        name: "{{ common_software_packages }}"
        state: latest
    - name: Apply full theme and dotfiles
      include_role:
        name: professormanhattan.theme

- name: Prepare for the "base" TemplateVM provisioning
  hosts: dom0
  tasks:
    - name: Realize the "base" TemplateVMs
      vars:
        dom0_features:
          - create-vms
        formation_slug: base
        formation_vms: "{{ groups['primary-templates-minimal'] + groups['primary-templates-stock'] + groups['groups['primary-templates-base'] }}"
        formation_vms_previous: "{{ groups['primary-templates-minimal'] + groups['primary-templates-stock'] }}"
      include_tasks: tasks/qubes/formation.yml

- name: Provision the "base" TemplateVMs
  hosts: primary-templates-base
  tasks:
    - include_tasks: tasks/qubes/vm-template-base.yml

- name: Prepare for the "full" TemplateVM provisioning
  hosts: dom0
  tasks:
    - name: Realize the "full" TemplateVMs
      vars:
        dom0_features:
          - create-vms
        formation_slug: full
        formation_vms: "{{ groups['primary-templates'] + ['vpn-tmpl'] }}"
        formation_vms_previous: "{{ groups['primary-templates-minimal'] + groups['primary-templates-stock'] + groups['groups['primary-templates-base'] }}"
      include_tasks: tasks/qubes/formation.yml

- name: Provision the "full" TemplateVMs
  hosts: primary-templates-full:primary-templates-docker:vpn-tmpl
  tasks:
    - include_tasks: tasks/qubes/vm-template-full.yml

- name: Prepare for the "tmpl" TemplateVM provisioning
  hosts: dom0
  tasks:
    - name: Realize the "tmpl" TemplateVMs
      vars:
        dom0_features:
          - create-vms
        formation_slug: tmpl
        formation_vms: "{{ groups['primary-templates'] + groups['standard-templates'] + groups['vpn-templates'] }}"
        formation_vms_previous: "{{ groups['primary-templates'] + ['vpn-tmpl'] }}"
      include_tasks: tasks/qubes/formation.yml

- name: Provision the "tmpl" TemplateVMs
  hosts: vpn-templates:standard-templates
  tasks:
    - include_tasks: tasks/qubes/vm-template-tmpl.yml

- name: Prepare for provisioning the rest of the Qubes VMs
  hosts: dom0
  tasks:
    - name: Realize all the Qubes VMs
      vars:
        dom0_features:
          - create-vms
        formation_slug: all
        formation_vms:  "{{ groups['vms'] }}"
        formation_vms_previous: "{{ groups['primary-templates'] + groups['standard-templates'] + groups['vpn-templates'] }}"
      include_tasks: tasks/qubes/formation.yml

- name: Provision all of the AppVMs etc.
  hosts: vms:!primary-templates:!standard-templates:!vpn-templates
  tasks:
    - include_tasks: tasks/qubes/vm-template-all.yml



- name: Disable TemplateVM's NetVMs and enable ProxyVM NetVMs
  hosts: dom0
  tasks:

    - name: Connect AppVMs, ProxyVMs, and StandaloneVMs to the sys-firewall NetVM
      vars:
        netvm: sys-firewall
      include_tasks: tasks/qubes/qvm-netvm.yml
      loop: "{{ groups['app-vms'] +  groups['proxy-vms'] + groups['standalone-vms'] }}"


- name: Finish provisioning dom0
  hosts: dom0
  tasks:
    - name: Set the NetVM for all VMs equal to their inventory-defined NetVM
      vars:
        connect_default_netvm: true
      include_tasks: tasks/qubes/qvm-netvm.yml
      loop: "{{ groups['qubes-vms'] }}"
    - name: Enable updates over Tor
      vars:
        dom0_features:
          - tor-updates
      include_role:
        name: professormanhattan.qubes
