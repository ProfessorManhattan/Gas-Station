---
# @var warp_ip: ""
# IP address to advertise the Swarm on
warp_ip: ""

# @var generate_random_docker_passwords: true
# Whether or not to generate / save random passwords for various Docker passwords, etc.
generate_random_docker_passwords: true

# @var docker_stacks_volumes: {}
# A map that correlates the Docker host ID with a list of volumes (used for automated backups via Autorestic)
docker_stacks_volumes:
  healthchecks:
    - healthchecks_config
    - healthchecks_postgres
  portainer:
    - portainer_manager_data
  statping:
    - statping_app
    - statping_postgres

# @var docker_stacks: []
# List of Stacks to deploy, with any Secrets that need to be created. The example linked to shows all the stacks
# and configuration options available to use with this role.
docker_stacks: []
# @example
# docker_stacks:
#   - app_name: statping
#     secrets:
#       statping_database_user: "{{ docker_randomized_passwords.statping_database_user }}"
#       statping_database_name: "{{ docker_randomized_passwords.statping_database_name }}"
#       statping_database_password: "{{ docker_randomized_passwords.statping_database_password }}"
#     template:
#       NAME: Megabyte Labs
#       DESCRIPTION: Uptime and latency reports for endpoints included in the Megabyte Labs eco-system
#   - app_name: healthchecks
#     secrets:
#       healthchecks_db_user: "{{ docker_randomized_passwords.healthchecks_db_user }}"
#       healthchecks_db_name: "{{ docker_randomized_passwords.healthchecks_db_name }}"
#       healthchecks_db_password: "{{ docker_randomized_passwords.healthchecks_db_password }}"
#       healthchecks_sendgrid_api_key: "{{ sendgrid_api_key }}"
#       healthchecks_secret_key: "{{ docker_randomized_passwords.healthchecks_secret_key }}"
#       healthchecks_slack_client_id: "{{ slack_app_client_id }}"
#       healthchecks_slack_client_secret: "{{ slack_app_client_secret }}"
#       healthchecks_superuser_email: "{{ admin_email }}"
#       healthchecks_superuser_password: "{{ admin_webapp_password }}"
#     template:
#       ALLOWED_HOSTS: "*.{{ public_domain }}"
#       DEFAULT_FROM_EMAIL: "alerts@{{ public_domain }}"
#       SITE_NAME: Megabyte Lab Healthchecks
#       SITE_ROOT: "https://{{ healthcheck_endpoint }}"
#       SITE_LOGO_URL: https://gitlab.com/megabyte-labs/misc/assets/-/raw/master/logo/blue-logo-50.png
#.  - app_name: gitlab
#.    environment:
#.      gitlab_root_password: "{{ gitlab_root_password }}"
#.    configs:
#       gitlab: |
#         external_url 'https://my.domain.com/'
#         gitlab_rails['initial_root_password'] = File.read('/run/secrets/gitlab_root_password')
#   - app_name: portainer
#     secrets:
#       portainer_admin_password: "{{ admin_webapp_password }}"
#     template:
#       SITE_LOGO_URL: https://gitlab.com/megabyte-labs/misc/assets/-/raw/master/logo/blue-logo-50.png
#       TEMPLATES_URL: TODO Research what should be here
#   - app_name: wireguard
#     template:
#       INTERNAL_SUBNET: 10.48.48.0
#       SERVERURL: wg.megabyte.space
# @end

# @var randomized_passwords: []
# An array of password profiles that are used to generate random passwords for the stacks being deployed.
# The randomly generated passwords are stored in `group_vars/all/randomized.vault.yml` if any are missing.
randomized_passwords:
  - name: gitlab_root_password
    chars: ascii_letters,digits
    length: 31
  - name: healthchecks_db_user
    chars: ascii_letters
    length: 8
  - name: healthchecks_db_name
    chars: ascii_letters
    length: 10
  - name: healthchecks_db_password
    chars: ascii_letters,digits
    length: 28
  - name: healthchecks_secret_key
    chars: ascii_letters,digits
    length: 50
  - name: portainer_admin_webapp_password
    chars: ascii_letters,digits
  - name: statping_database_user
    chars: ascii_letters
    length: 9
  - name: statping_database_name
    chars: ascii_letters
    length: 7
  - name: statping_datbase_password
    chars: ascii_letters,digits
    length: 29
# @example
# randomized_passwords:
#   - name: statping_database_password
#     chars: ascii_letters
#     length: 24
#   - name: gitlab_root_password
#     chars: ascii_letters,digits
#     length: 30
# @end

# @var swarm_master: true
# Set to `true` if the target machine should be a Swarm Master
swarm_master: true

# @var swarm_node: false
# Set to `false` if the target machine should be a Swarm Node
swarm_node: false
