---
- name: Create group_vars/all directory on localhost if it does not exist
  file:
    path: group_vars/all
    recurse: true
    state: directory

- name: Check for presence of group_vars/all/randomized.vault.yml file
  stat:
    path: group_vars/all/randomized.vault.yml
  register: randomized_vault_file

- name: Create group_vars/all/randomized.vault.yml if it is not present
  copy:
    dest: group_vars/all/randomized.vault.yml
    content: |
      ---
      # IMPORTANT: This file is automatically generated. Changes could be over-written by Ansible!

- name: Generate the randomized passwords
  include_tasks: randomized-password.yml
  loop: "{{ randomized_passwords | default([]) }}"
  when: docker_randomized_passwords[item.name] is not defined

- name: Generate random Docker passwords (if missing or configured to automatically re-generate them)
  ansible.builtin.blockinfile:
    block: |
      docker_randomized_passwords:
      {% for randomized_credential in (docker_randomized_passwords | dict2items) %}
        {{ randomized_credential.key }}: "{{ randomized_credential.value }}"
      {% endfor %}
    marker: "# {mark} ANSIBLE GENERATED RANDOM PASSWORDS FOR DOCKER"
    path: group_vars/all/randomized.vault.yml

- name: Ensure pexpect is installed
  ansible.builtin.pip:
    name: pexpect
  when:
    - vault_password is defined

- name: Add group_vars/all/randomized.vault.yml to the vault
  expect:
    command: ansible-vault encrypt --ask-vault-pass group_vars/all/randomized.vault.yml
    responses:
      New Vault password: "{{ vault_password }}"
      Confirm New Vault password: "{{ vault_password }}"
  when:
    - vault_password is defined
