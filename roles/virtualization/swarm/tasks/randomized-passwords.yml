---
- name: Create group_vars/all directory on localhost if it does not exist
  file:
    path: group_vars/all
    recurse: true
    state: directory

- name: Check for presence of group_vars/all/randomized.vault.yml file
  stat:
    path: group_vars/all/randomized.vault.yml
  register: randomized_vault_file

- name: Create group_vars/all/randomized.vault.yml if it is not present
  copy:
    dest: group_vars/all/randomized.vault.yml
    content: |
      ---
      # IMPORTANT: This file is automatically generated. Changes could be over-written by Ansible!

- name: Generate the randomized passwords
  block:
    - name: "Generate randomized credential for {{ item.name }}"
      ansible.builtin.set_fact:
        new_randomized_entry: "{{item.name}}={{ lookup('ansible.builtin.password', '/tmp/passwordfile length=' + item.length + ' chars=' + item.chars) }}"
    - name: "Merge credentials"
      ansible.builtin.set_fact:
        docker_randomized_passwords: "{{ docker_randomized_passwords | combine(new_randomized_entry) }}"
  loop:
    - name: healthchecks_db_user
      chars: ascii_letters
      length: 8
    - name: healthchecks_db_name
      chars: ascii_letters
      length: 10
    - name: healthchecks_db_password
      chars: ascii_letters,digits
      length: 28
    - name: healthchecks_secret_key
      chars: ascii_letters,digits
      length: 50
    - name: statping_database_user
      chars: ascii_letters
      length: 9
    - name: statping_database_name
      chars: ascii_letters
      length: 7
    - name: statping_datbase_password
      chars: ascii_letters,digits
      length: 29
  when: docker_randomized_passwords[item.name] is not defined

- name: Generate random Docker passwords (if missing or configured to automatically re-generate them)
  ansible.builtin.blockinfile:
    block: |
      docker_randomized_passwords:
      {% for randomized_credential in (docker_randomized_passwords | dict2items) %}
        {{ randomized_credential.key }}: "{{ randomized_credential.value }}"
      {% endfor %}
    marker: "# {mark} ANSIBLE GENERATED RANDOM PASSWORDS FOR DOCKER"
    path: group_vars/all/randomized.vault.yml

- name: Ensure pexpect is installed
  ansible.builtin.pip:
    name: pexpect
  when:
    - vault_password is defined

- name: Add group_vars/all/randomized.vault.yml to the vault
  expect:
    command: ansible-vault encrypt --ask-vault-pass group_vars/all/randomized.vault.yml
    responses:
      New Vault password: "{{ vault_password }}"
      Confirm New Vault password: "{{ vault_password }}"
  when:
    - vault_password is defined
