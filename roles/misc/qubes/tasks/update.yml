---
- name: Enable testing repositories for latest dom0 updates
  become: true
  copy:
    src: files/qubes-dom0.repo
    dest: /etc/yum.repos.d/qubes-dom0.repo

- name: Enable testing repositories for latest template updates
  become: true
  copy:
    src: files/qubes-templates.repo
    dest: /etc/qubes/repo-templates/qubes-templates.repo

- name: Check if TemplateVMs were already updated
  stat:
    path: /tmp/dom0_updated
  register: dom0_update_status

- name: Update dom0
  become: true
  shell: qubesctl --show-output state.sls update.qubes-dom0
  register: qubesctl_update_dom0
  changed_when: qubesctl_update_dom0.stdout | regex_search('Succeeded. [0-9]* \(changed=[0-9]*\)') is not none
  failed_when: qubesctl_update_dom0.stdout | regex_search('Failed. *[1-9]+[0-9]*') is not none
  when: not dom0_update_status.stat.exists

- name: Complete dom0 update with alternate method
  become: true
  shell: qubes-dom0-update --clean -y
  register: qubes_dom0_update_clean
  changed_when: "'No updates available' not in qubes_dom0_update_clean.stdout"
  when: not dom0_update_status.stat.exists

- name: Create dummy temporary file used to determine whether or not to skip update process
  copy:
    content: |
      dom0 update done
    dest: /tmp/dom0_updated
  when: not dom0_update_status.stat.exists

- name: Check if sys-whonix is running
  command: qvm-check --running sys-whonix
  register: sys_whonix_running_state
  changed_when: false

- name: Ensure sys-whonix has started
  command: qvm-start sys-whonix --skip-if-running
  when: sys_whonix_running_state.rc != 0

- name: Configure anon-connection-wizard
  shell:
    cmd: |
      CONFIG_WIZARD_COUNT=0
      ENABLE_OBFSC='true'
      function configureWizard() {
        if xwininfo -root -tree | grep "Anon Connection Wizard"; then
          WINDOW_ID="$(xwininfo -root -tree | grep "Anon Connection Wizard" | sed 's/^ *\([^ ]*\) .*/\1/')"
          sleep 0.5
          if [[ "$ENABLE_OBFSC" == 'true' ]]; then
            xdotool key 'Tab'
            xdotool key 'Tab'
            xdotool key 'Tab'
            xdotool key 'Down'
          fi
          xdotool key 'Enter'
          sleep 0.5
          if [[ "$ENABLE_OBFSC" == 'true' ]]; then
            xdotool key 'Space'
          fi
          xdotool key 'Tab'
          xdotool key 'Tab'
          xdotool key 'Enter'
          sleep 14
          xdotool windowactivate "$WINDOW_ID"
          sleep 0.5
          xdotool key 'Enter'
        else
          sleep 3
          CONFIG_WIZARD_COUNT=$((CONFIG_WIZARD_COUNT + 1))
          if [[ "$CONFIG_WIZARD_COUNT" == '4' ]]; then
            echo "anon-connection-wizard was probably already run."
          else
            configureWizard
          fi
        fi
      }
      configureWizard > /dev/null
  when: sys_whonix_running_state.rc != 0

- name: Check if TemplateVMs were already updated
  stat:
    path: /tmp/templatevms_updated
  register: templatevm_update_status

- name: Ensure the TemplateVMs are updated
  become: true
  shell: qubesctl --show-output --skip-dom0 --templates state.sls update.qubes-vm
  register: qubesctl_template_update
  changed_when: qubesctl_template_update.stdout | regex_search('Succeeded. [0-9]* \(changed=[0-9]*\)') is not none
  failed_when: qubesctl_template_update.stdout | regex_search('Failed. *[1-9]+[0-9]*') is not none
  when: not templatevm_update_status.stat.exists
  async: 3667
  poll: 0

- name: Create dummy temporary file used to determine whether or not to skip update process
  copy:
    content: |
      templatevm done
    dest: /tmp/templatevms_updated
  when: not templatevm_update_status.stat.exists

# TODO: Add logic to import GPG key and verify these downloads
- name: Install unman templates (from unman)
  include_tasks: unofficial-template.yml
  register: "unofficial_template_task[{{ item.template }}]"
  async: 3600
  poll: 0
  loop: "{{ unofficial_templates }}"

- name: Wait for unofficial templates to finish installing
  async_status:
    jid: "{{ unofficial_template_task[item.template].ansible_job_id }}"
  register: async_unofficial_job_result
  until: async_unofficial_job_result.finished
  retries: 999
  delay: 20
  loop: "{{ unofficial_templates }}"

- name: Wait for download to finish
  async_status:
    jid: "{{ qubesctl_template_update.ansible_job_id }}"
  register: async_qubesctl_job_result
  until: async_qubesctl_job_result.finished
  retries: 999
  delay: 20
