---
- name: Check if dom0 update cache was cleaned
  stat:
    path: /tmp/dom0_update_cache_cleaned
  register: dom0_cache_clean_check

- name: Ensure dom0 update cache is clean
  become: true
  run_once: true
  shell:
    cmd: qubes-dom0-update --clean -y
  register: qubes_dom0_update_clean
  changed_when: "(qubes_dom0_update_clean.stdout is defined) and ('No updates available' not in qubes_dom0_update_clean.stdout)"
  when: not dom0_cache_clean_check.stat.exists

- name: Save temporary file indicating dom0 update cache has been cleaned
  copy:
    content: |
      cleaned
    dest: /tmp/dom0_update_cache_cleaned

- name: Create search options for {{ item.package | default(item) }}
  set_fact:
    dnf_search_options: " --exclude {{ item.excludes }}"
  when: item.excludes is defined

- name: Determine if {{ item.package | default(item) }} is already installed
  become: true
  command:
    cmd: dnf list {{ item.package | default(item) }}
  changed_when: false
  failed_when: false
  register: dependency_dnf_search
  when: item.excludes is not defined
  args:
    executable: /bin/bash

- name: Determine if {{ item.package | default(item) }} is already installed (with search options)
  become: true
  command:
    cmd: dnf list {{ item.package | default(item) }}{{ dnf_search_options | default(omit) }}
  changed_when: false
  failed_when: false
  register: dependency_dnf_search_alt
  when: item.excludes is defined
  args:
    executable: /bin/bash

- name: Ensure {{ item.package | default(item) }} is installed
  become: true
  shell:
    cmd: qubes-dom0-update -y {{ item.package | default(item) }}
  args:
    executable: /bin/bash
  register: qubes_dom0_pkg
  changed_when: "'is already installed' not in qubes_dom0_pkg.stdout"
  failed_when: "('is already installed' not in qubes_dom0_pkg.stdout) and (qubes_dom0_pkg.rc != 0)"
  when: "((dependency_dnf_search.stderr is defined) and ('No matching Packages to list' in dependency_dnf_search.stderr)) or ((dependency_dnf_search_alt.stderr is defined) and ('No matching Packages to list' in dependency_dnf_search_alt.stderr))"
