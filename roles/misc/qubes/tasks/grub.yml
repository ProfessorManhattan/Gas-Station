---
- name: Ensure Betelgeuse theme is present
  include_tasks: betelgeuse.yml

- name: Determine width of screen
  shell:
    cmd: xrandr --current | grep '*' | uniq | awk '{print $1}' | cut -d 'x' -f1
  register: screen_width
  changed_when: false
  when: qubes_grub_resolution_type == 'autodetect-lowest-resolution'

- name: Determine height of screen
  shell:
    cmd: xrandr --current | grep '*' | uniq | awk '{print $1}' | cut -d 'x' -f2
  register: screen_height
  changed_when: false
  when: qubes_grub_resolution_type == 'autodetect-lowest-resolution'

- name: Calculate screen dimension ratio
  shell:
    cmd: |
      SCREEN_RATIO="$(awk -v height={{ screen_height.stdout }} -v width={{ screen_width.stdout }} 'BEGIN { print ((height / width) * 1000) }')"
      echo "${SCREEN_RATIO%.*}"
  register: screen_ratio
  args:
    executable: /bin/bash
  changed_when: false
  when: qubes_grub_resolution_type == 'autodetect-lowest-resolution'

- name: Set screen dimension to ultrawide if the calculated SCREEN_RATIO is above 2100 (ratio for 1080p is 1777.78 and ratio for 2560x1080p is 2370.37)
  set_fact:
    qubes_grub_resolution_type: "{{ 'ultrawide' if ((screen_ratio.stdout | int) > 2100) else '1080p' }}"
  when: qubes_grub_resolution_type == 'autodetect-lowest-resolution'

- name: Copy over GRUB theme files
  become: true
  copy:
    src: /usr/src/{{ theme_slug | lower }}/share/grub/themes/
    dest: /usr/share/grub/themes/
    remote_src: true

- name: Ensure /boot/grub2/themes is a directory
  become: true
  file:
    path: /boot/grub2
    state: directory

- name: Copy /usr/share/grub/themes to /boot/grub2/themes
  become: true
  copy:
    src: /usr/share/grub/themes/
    dest: /boot/grub2/themes/
    remote_src: true

- name: Optimize the GRUB resolution
  become: true
  lineinfile:
    path: /etc/default/grub
    regex: 'GRUB_GFXMODE='
    line: 'GRUB_GFXMODE={{ qubes_grub_gfxmode }}'
  notify: update grub

- name: Ensure GRUB_GFXPAYLOAD_LINUX is set
  become: true
  lineinfile:
    path: /etc/default/grub
    regex: 'GRUB_GFXPAYLOAD_LINUX='
    line: 'GRUB_GFXPAYLOAD_LINUX="keep"'
  notify: update grub

- name: Ensure GRUB is using the Mirage theme
  become: true
  lineinfile:
    path: /etc/default/grub
    regex: 'GRUB_THEME='
    line: 'GRUB_THEME="/boot/grub2/themes/{{ theme_slug | lower }}-{{ qubes_grub_resolution_type }}/theme.txt"'
  notify: update grub

- name: Silence log messages during the GRUB boot process
  become: true
  lineinfile:
    path: /etc/default/grub
    regex: 'rd.systemd.show_status=auto'
    line: 'GRUB_CMDLINE_LINUX=$GRUB_CMDLINE_LINUX quiet loglevel=3 rd.systemd.show_status=auto rd.udev.log-priority=3 loglevel=0 vt.global_cursor_default=0 splash'
  notify: update grub
  when: aggressive_grub_log_silencing

- name: Register the stdout of /etc/default/grub
  command: cat /etc/default/grub
  register: cat_default_grub
  changed_when: false

- name: Generate version of /etc/default/grub that has no duplicate lines
  shell:
    cmd: cat /etc/default/grub | uniq -u
  register: uniq_default_grub
  changed_when: false

- name: Ensure there are no duplicate lines in /etc/default/grub
  become: true
  copy:
    dest: /etc/default/grub
    content: |
      {{ uniq_default_grub.stdout }}
    mode: 0644
  when: cat_default_grub.stdout != uniq_default_grub.stdout

- name: Ensure grubenv is available in the Qubes EFI folder
  become: true
  copy:
    src: /boot/grub2/grubenv
    dest: /boot/efi/EFI/qubes/grubenv
    mode: 0644
    remote_src: true

# @action Ensures GRUB is configured
# Adds script that bypasses the GRUB menu when SHIFT is not held down
- name: Ensure GRUB shift key script is added
  copy:
    src: 31_hold_shift
    dest: /etc/grub.d/31_hold_shift
  when: qubes_grub_hold_shift

- name: Enable GRUB shift key feature in /etc/default/grub
  lineinfile:
    path: /etc/default/grub
    regex: 'GRUB_FORCE_HIDDEN_MENU='
    line: 'GRUB_FORCE_HIDDEN_MENU="{{ qubes_grub_hold_shift }}"'

- name: Modify the icon used to match the base OS (store the icon in the `icons` folder of the theme and name each icon as `ansible_distribution | lower`.png or `ansible_os_family | lower `.png)
  stat:
    path: /boot/grub2/themes/{{ theme_slug | lower }}-{{ grub_theme_resolution_type }}/icons/{{ ansible_distribution | lower }}.png
  register: ans_dist_icon

- name: Check for os_family icon
  stat:
    path: /boot/grub2/themes/{{ theme_slug | lower }}-{{ grub_theme_resolution_type }}/icons/{{ ansible_os_family | lower }}.png
  register: ans_os_fam_icon

- name: Calculate what icon to use
  set_fact:
    grub2_os_icon: "{{ ansible_distribution if ans_dist_icon.stat.exists else (ansible_os_family if ans_os_fam_icon.stat.exists else 'qubes') }}"

# @action Ensures GRUB is configured
# Sets Plymouth boot logo to match the main operating system
- name: Apply the icon (based on the OS)
  copy:
    src: /boot/grub2/themes/{{ theme_slug | lower }}-{{ grub_theme_resolution_type }}/icons/{{ grub2_os_icon }}.png
    dest: /boot/grub2/themes/{{ theme_slug | lower }}-{{ grub_theme_resolution_type }}/icon.png
    remote_src: true
  notify: update grub
