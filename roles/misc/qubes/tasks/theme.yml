---
- name: Ensure Betelgeuse theme is present
  include_tasks: betelgeuse.yml

- name: Remove various "ugly" wallpaper assets
  become: true
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /usr/share/backgrounds/images
    - /usr/share/backgrounds/f32
    - /usr/share/backgrounds/qubes
    - /usr/share/backgrounds/xfce
    - /usr/share/wallpapers

- name: Copy over theme files
  become: true
  copy:
    src: /usr/src/{{ theme_slug }}/share/
    dest: /usr/share/
    remote_src: true

- name: Ensure /usr/share/plasma uses files instead of symlinks
  become: true
  shell:
    cmd: |
      set -ex
      while read link; do
        test -h "$link" || continue
        dir=$(dirname "$link")
        reltarget=$(readlink "$link")
        case $reltarget in
            /*) abstarget=$reltarget;;
            *)  abstarget=$dir/$reltarget;;
        esac
        rm -fv "$link"
        cp -afv "$abstarget" "$link" || {
            # on failure, restore the symlink
            rm -rfv "$link"
            ln -sfv "$reltarget" "$link"
        }
      done< <(find /usr/share/plasma -type l)
  register: squash_symlink
  changed_when: "squash_symlink.stdout != ''"
  args:
    executable: /bin/bash

- name: Check for presence of user theme archive
  become: true
  become_user: "{{ dom0_user }}"
  become_method: su
  become_flags: "--login"
  file:
    path: ~/.config/user-kde-settings
    state: directory
    recurse: true
  register: user_theme_indicator

- name: Ensure user theme backup gets applied
  become: true
  become_user: "{{ dom0_user }}"
  become_method: su
  become_flags: "--login"
  ansible.builtin.unarchive:
    src: files/user-kde-settings.tar.gz
    dest: ~/.config/user-kde-settings
    extra_opts: [--strip-components=1]
  when: user_theme_indicator.changed

- name: Move user theme plasma/plasmoids folder
  become: true
  become_user: "{{ dom0_user }}"
  become_method: su
  become_flags: "--login"
  copy:
    src: ~/.config/user-kde-settings/plasma/
    dest: ~/.local/plasma/
    remote_src: true
  when: user_theme_indicator.changed

- name: Remove user-kde-settings plasma folder
  become: true
  become_user: "{{ dom0_user }}"
  become_method: su
  become_flags: "--login"
  file:
    path: ~/.config/user-kde-settings/plasma
    state: absent
  when: user_theme_indicator.changed

- name: Copy over other files in the user-kde-settings to ~/.config
  become: true
  become_user: "{{ dom0_user }}"
  become_method: su
  become_flags: "--login"
  copy:
    src: ~/.config/user-kde-settings/
    dest: ~/.config/
    remote_src: true
  when: user_theme_indicator.changed

- name: Ensure dependencies are installed
  include_tasks: dependency.yml
  loop:
    - kde-settings-qubes
    - kdeplasma-addons
    # Installed because it integrates with KDE (it's optional)
    - package: konsole
      exclude: konsole5-part
    # Allows use of more than one monitor (Source: https://forum.qubes-os.org/t/installing-and-running-kde-as-desktop-environment/1513/34?page=2)
    - kscreen
    - package: kvantum
      exclude: kvantum-data
    - qubes-repo-contrib
    # Add KDE Connect

- name: Install Plasmoids
  include_tasks: plasmoid.yml
  loop: "{{ lookup('fileglob', 'files/plasmoids/*', wantlist=True) }}"

- name: Ensure qubes-repo-contrib packages are installed
  include_tasks: dependency.yml
  loop:
    - rofi

- name: Add the dotfiles
  include_tasks: dotfiles.yml

- name: Ensure /usr/share/applications has a hidden folder
  become: true
  file:
    path: /usr/share/applications/hidden
    state: directory

- name: Remove unnecessary System Tools
  include_tasks: remove-system-tool.yml
  loop: "{{ hidden_system_tools }}"

- name: Ensure Kvantum has environment variable set
  become: true
  lineinfile:
    path: /etc/environment
    regex: "QT_STYLE_OVERRIDE"
    line: "export QT_STYLE_OVERRIDE=kvantum"

- name: Apply gsettings
  include_tasks: gsetting.yml
  loop:
    # Enables CTRL+Shift+I to inspect Gtk options
    - setting: org.gtk.Settings.Debug enable-inspector-keybinding
      value: 'true'
    - setting: org.gnome.desktop.interface gtk-theme
      value: 'Betelgeuse'
    - setting: org.gnome.desktop.wm.preferences theme
      value: 'Betelgeuse'

# - name: Ensure the Betelgeuse desktop background is applied
#   become_user: "{{ dom0_user }}"
#   become_method: su
#   become_flags: "--login"
#   shell:
#     cmd: |
#       qdbus org.kde.plasmashell /PlasmaShell org.kde.PlasmaShell.evaluateScript 'var allDesktops = desktops();print (allDesktops);for (i=0;i<allDesktops.length;i++) {d = allDesktops[i];d.wallpaperPlugin = "org.kde.image";d.currentConfigGroup = Array("Wallpaper", "org.kde.image", "General");d.writeConfig("Image", "file:///usr/share/backgrounds/images/default.png")}'

- name: Update xfconf settings
  become: true
  become_user: "{{ dom0_user }}"
  become_method: su
  become_flags: "--login"
  community.general.system.xfconf:
    channel: "{{ item.channel }}"
    property: "{{ item.property }}"
    value_type: "{{ item.value_type | default('string') }}"
    value: "{{ item.value }}"
  failed_when: false
  loop: "{{ qubes_xfconf_settings }}"

- name: Ensure SDDM configuration is in place
  become: true
  lineinfile:
    path: /etc/sddm.conf
    regex: "#ServerArguments"
    line: "ServerArguments=-nolisten tcp -background none"

- name: Ensure SDDM configuration is in place
  become: true
  lineinfile:
    path: /etc/sddm.conf
    regex: "Current="
    line: "Current={{ theme_slug_uppercase }}"

# Possibly causing a FOUC
#- name: Add custom wayland-session to load Betelgeuse theme prior to display
#  become: true
#  copy:
#    src: files/wayland-session.sh
#    dest: /etc/sddm/wayland-session
#    mode: '0755'

- name: Stop / disable the lightdm service
  become: true
  ansible.builtin.systemd:
    name: lightdm
    enabled: false
    state: stopped

- name: Start / enable the SDDM service
  become: true
  ansible.builtin.systemd:
    state: started
    name: sddm
    enabled: true
