---
- name: "Ensure {{ app_name }} is installed"
  apt:
    name: golang
    state: "{{ app_state | default('present') }}"
    update_cache: "{{ omit if skip_package_cache_update is defined else 'true' }}"
  when:
    - ansible_distribution != 'Debian' or (ansible_distribution == 'Debian' and (ansible_distribution_major_version | int >= 11))
    - ansible_distribution != 'Ubuntu' or (ansible_distribution == 'Ubuntu' and (ansible_distribution_major_version | int >= 22))

- name: Ensure Homebrew is installed (if required for recent release of golang)
  ansible.builtin.include_role:
    name: professormanhattan.homebrew
  when:
    - (ansible_distribution == 'Debian' and (ansible_distribution_major_version | int < 12)) or (ansible_distribution == 'Ubuntu' and (ansible_distribution_major_version | int < 22))

- name: "Ensure {{ app_name }} is installed via Homebrew (for system's where apt-get returns lower than version 1.16)"
  community.general.homebrew:
    name: golang
    state: present
  when:
    - (ansible_distribution == 'Debian' and (ansible_distribution_major_version | int < 12)) or (ansible_distribution == 'Ubuntu' and (ansible_distribution_major_version | int < 22))

- name: Run user configuration tasks
  include_tasks: user-Linux.yml
  loop: "{{ user_configs }}"
  loop_control:
    label: "{{ user.username }}"
    loop_var: user
  when:
    - install_developer_dependencies
    - (user.system is not defined) or ((user.system is defined) and (not user.system))
