---
- name: "Ensure {{ app_name }}'s dependencies are installed"
  package:
    name: "{{ motd_dependencies }}"
    state: "{{ app_state | default('present') }}"
  when: ansible_system == 'Linux'

- name: Check if lolcat was saved to /usr/games/lolcat
  stat:
    path: /usr/games/lolcat
  register: games_lolcat

- name: Symlink lolcat to /usr/bin/lolcat since it is sometimes installed to /usr/games/lolcat
  file:
    src: /usr/games/lolcat
    dest: /usr/bin/lolcat
    state: link
  when: games_lolcat.stat.exists

- name: "Ensure {{ app_name }}'s source directory is present"
  file:
    mode: 0755
    path: "{{ motd_src_dir }}"
    state: directory

- name: "Ensure {{ app_name }}'s source is cloned and up-to-date"
  git:
    dest: "{{ motd_src_dir }}"
    repo: "{{ motd_git_repository }}"
    version: master
  register: motd_git

- name: Ensure chosen motd files are copied to /etc/update-motd.d/ # noqa 503
  copy:
    src: "{{ motd_src_dir }}/{{ item }}"
    dest: /etc/update-motd.d/
    mode: 0755
    remote_src: true
  loop: "{{ motd_services }}"
  when: motd_git.changed

- name: Check for presence of /etc/pam.d/sshd
  stat:
    path: /etc/pam.d/sshd
  register: pamd_sshd

- name: Remove references to pam_motd.so are removed from /etc/pam.d/sshd
  lineinfile:
    path: /etc/pam.d/sshd
    state: absent
    regexp: '^.*pam_motd.so.*$'
  when: pamd_sshd.stat.exists

- name: Check for presence of /etc/ssh/sshd_config
  stat:
    path: /etc/ssh/sshd_config
  register: sshd_config_stat

- name: Ensure /etc/ssh/sshd_config has the appropriate settings
  ansible.builtin.blockinfile:
    path: /etc/ssh/sshd_config
    marker: "### {mark} ANSIBLE MANAGED BLOCK MOTD ###"
    block: |
      # To bypass the MOTD (for scripts), you can run export MOTD=0; ssh -o SendEnv=MOTD -t host.name.net
      AcceptEnv MOTD
      PrintMotd no
      PrintLastLog no
      Banner none
  when: sshd_config_stat.stat.exists

- name: Ensure Docker can be reached passwordlessly for a status check
  ansible.builtin.blockinfile:
    path: /etc/sudoers
    marker: "### {mark} ANSIBLE MANAGED BLOCK DOCKER ###"
    block: |
      %docker ALL=(ALL) NOPASSWD: /usr/bin/curl -sf --unix-socket /var/run/docker.sock http\:/v1.40/info
      %docker ALL=(ALL) NOPASSWD: /usr/bin/curl -sf --unix-socket /var/run/docker.sock http\:/v1.40/containers/json?all=true

- name: Ensure Let's Encrypt can be reached passwordlessly for a status check (TODO)
  ansible.builtin.blockinfile:
    path: /etc/sudoers
    marker: "### {mark} ANSIBLE MANAGED BLOCK DOCKER ###"
    block: |
      # TODO - Figure out how to integrate this
      username ALL=(ALL) NOPASSWD: /usr/bin/find </your/path/to/ssl> -name cert.pem
      username ALL=(ALL) NOPASSWD: /usr/bin/openssl
  when: false
