---
- name: Fetch the release information
  ansible.windows.win_uri:
    url: "https://formulae.brew.sh/api/cask/ghost-browser.json"
  register: ghost_browser_release

- name: Ensure Megabyte Labs configuration directory exists
  ansible.windows.win_file:
    path: '%USERPROFILE%\.config\megabytelabs'
    state: directory

- name: "Check if {{ app_name }} has configuration stored in '%USERPROFILE%/.config/megabytelabs/ghost_browser'"
  ansible.windows.win_stat:
    path: '%USERPROFILE%\.config\megabytelabs\ghost_browser'
  register: ghost_browser_config

- name: "Detect previously installed {{ app_name }} version"
  ansible.windows.win_shell: type ghost_browser
  args:
    chdir: '%USERPROFILE%\.config\megabytelabs'
  changed_when: false
  register: current_ghost_browser_version
  when: ghost_browser_config.stat.exists

- name: "Determine whether or not the latest version of {{ app_name }} is already installed"
  set_fact:
    install_ghost_browser: "{{ (current_ghost_browser_version.skipped | default(false)) or \
      ((not current_ghost_browser_version.skipped | default(false)) and \
      (current_ghost_browser_version.stdout | trim != ghost_browser_release.json.version)) }}"

- name: "Ensure {{ app_name }} is installed"
  ansible.windows.win_package:
    path: "https://downloads.ghostbrowser.com/GhostBrowser-{{ ghost_browser_release.json.version }}_x64.exe"
    state: present
  when: install_ghost_browser

- name: "Save meta information about the version of {{ app_name }} that was installed"
  ansible.windows.win_copy:
    dest: '%USERPROFILE%\.config\megabytelabs\ghost_browser'
    content: |
      {{ ghost_browser_latest_version }}
  when: install_ghost_browser
