{
  "blueprint": {
    "description": "An Ansible playbook that provisions your network with software from GitHub Awesome lists, developed with disaster recovery in mind â›½ðŸ”¥ðŸ¤¤",
    "group": "ansible",
    "name": "Gas Station",
    "overview": "Gas Station is a well-documented, customizable provisioning script (powered by Ansible and Terraform) that installs a cloud that includes tools, services, and Dockerized web applications that every developer/power-user should be using. It supports every major operating system including Windows, macOS, Debian flavors, RedHat flavors, and even Archlinux. It is the cumulative effort a team of developers and the relentless pursuit of the best of GitHub. The majority of the tools installed are found on various \"awesome\" lists on GitHub and other \"Best Software for\" lists. You can use Gas Station to rapidly provision a single machine or even a whole network.\n\n\nGas Station was born out of paranoia. Our method of ensuring our machines are malware-free is simple; wipe the machine(s) on a regular basis and re-install everything using an automated process. To accomplish this, we broke down this project into hundreds of roles (which can be used seperately without adopting the Gas Station \"wipe everything weekly\" mentality). The playbook and roles are designed to retain the state of the applications between installs. Stateless configurations are generally backed up to a private git repository and stateful application data is backed up to encrypted S3 buckets. This, in a way, reduces the attack surface of your system since the attacker would have to figure out a way of persisting their malware across re-installs (which is likely not an easy feat). This approach ensures that your system is built with disaster recovery in mind.\n\n\nThe main goal of Gas Station is not only to provide a sweet suite of software and web applications but also to encourage a new philosophy for how operating systems should be maintained. If everyone on earth decided to use Gas Station, bot nets would die out overnight. On top of that, when you store your configurations and applications in a format that can be added to source control, you ensure that you hold onto your work even when you get a new laptop or decide to reformat. Gas Station is the perfect example of how to do that. You can use Gas Station with minimal modifications to set up your personal home lab. However, we encourage you to modify it for your purposes. If you would like to give back to the community, please open pull requests when you come up with anything useful so our free product can mature and improve over time.",
    "repository": {
      "github": "https://github.com/ProfessorManhattan/Gas-Station",
      "gitlab": "https://gitlab.com/megabyte-labs/gas-station"
    },
    "slug": "gas-station",
    "subgroup": "playbook",
    "title": "Gas Station â›½ - Fuel Your DevEnv"
  }
}
